# Generated by Django 4.2.7 on 2024-11-08 09:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_quill.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Navbar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nomi')),
                ('visible', models.BooleanField(default=True, verbose_name="Ko'rinish")),
                ('status', models.CharField(choices=[('base', 'Asosiy'), ('inside', 'Ichki')], default='inside', max_length=30, verbose_name='status')),
                ('order_num', models.IntegerField(default=0, verbose_name='Tartib raqami')),
                ('inside_order_num', models.IntegerField(default=0, verbose_name='Ichki tartib raqam')),
                ('slug', models.SlugField(max_length=120, unique=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('url', models.URLField(blank=True, help_text='Tegish shart emas', max_length=255, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='navbar_author', to=settings.AUTH_USER_MODEL, verbose_name='object_make_user')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='basic_app.navbar')),
                ('update_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='update_navbar_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': "Bo'limlar",
                'verbose_name_plural': "Bo'limlar",
                'db_table': 'navbar',
                'ordering': ('order_num',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='image/%Y-%m-%d/', verbose_name='Asosiy rasm')),
                ('title', models.CharField(max_length=500, null=True, verbose_name='Sarlavha')),
                ('post', django_quill.fields.QuillField(blank=True, null=True, verbose_name="To'liq mazmuni")),
                ('status', models.CharField(choices=[('pub', 'Published'), ('pen', 'Pending')], default='pen', max_length=50, verbose_name='status')),
                ('slug', models.SlugField(help_text="Majburyat tug'ulmasa tegmang", unique=True, verbose_name='slug')),
                ('post_viewed_count', models.IntegerField(default=0, help_text='Tegilmasin !', verbose_name="Ko'rilganlik soni")),
                ('author_post', models.CharField(max_length=300, verbose_name='Muallifi')),
                ('pdf_file', models.FileField(blank=True, help_text='Faqat *.pdf formatdagi faylarni yuklang', null=True, upload_to='pdf/posts/%Y-%m-%d/', verbose_name='PDF fayl')),
                ('video_file', models.FileField(blank=True, help_text="agar video fayl mavjud bo'lsa yuklang.", null=True, upload_to='videos/posts/%Y-%m-%d/', verbose_name='Video fayl')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('navbar', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='basic_app.navbar', verbose_name="Bo'lim nomi")),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Postlar',
                'verbose_name_plural': 'Postlar',
                'db_table': 'posts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='image/%Y-%m-%d/', verbose_name='Asosiy rasm')),
                ('title', models.CharField(max_length=500, null=True, verbose_name='Sarlavha')),
                ('post', django_quill.fields.QuillField(blank=True, null=True, verbose_name="To'liq mazmuni")),
                ('status', models.CharField(choices=[('pub', 'Published'), ('pen', 'Pending')], default='pen', max_length=50, verbose_name='status')),
                ('slug', models.SlugField(help_text="Majburyat tug'ulmasa tegmang", unique=True, verbose_name='slug')),
                ('post_viewed_count', models.IntegerField(default=0, help_text='Tegilmasin !', verbose_name="Ko'rilganlik soni")),
                ('author_post', models.CharField(max_length=300, verbose_name='Muallifi')),
                ('pdf_file', models.FileField(blank=True, help_text='Faqat *.pdf formatdagi faylarni yuklang', null=True, upload_to='pdf/news/%Y-%m-%d/', verbose_name='PDF fayl')),
                ('video_file', models.FileField(blank=True, help_text="agar video fayl mavjud bo'lsa yuklang.", null=True, upload_to='videos/news/%Y-%m-%d/', verbose_name='Video fayl')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Yangiliklar',
                'verbose_name_plural': 'Yangiliklar',
                'db_table': 'news',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InteractiveMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('region_name', models.CharField(max_length=255, verbose_name='Viloyat nomi')),
                ('total_area', models.CharField(max_length=50, verbose_name='Umumiy maydon')),
                ('cultivated_area', models.CharField(max_length=50, verbose_name='Ekiladigan maydon')),
                ('forest_area', models.CharField(max_length=50, verbose_name="O'rmon xududi")),
                ('wasteland_area', models.CharField(max_length=50, verbose_name='Bosh yer hududi')),
                ('pastures_area', models.CharField(max_length=50, verbose_name='Yaylov xududi')),
                ('other_agricultural_land', models.CharField(max_length=50, verbose_name='Boshqa qishloq xojalik yerlari')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Interactive Map',
                'verbose_name_plural': 'Interactive Maps',
                'db_table': 'regions_datas',
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='administrators/')),
                ('f_name', models.CharField(max_length=100, verbose_name="To'liq ismi")),
                ('phone', models.CharField(max_length=100, verbose_name='Telefon raqami')),
                ('position', models.CharField(max_length=100, verbose_name='Lavozimi')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('admission_days', models.CharField(max_length=200, verbose_name='Qabul kunlari')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Administrator',
                'verbose_name_plural': 'Administrators',
                'db_table': 'administrators',
            },
        ),
    ]
